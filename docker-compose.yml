package recursionfilesystem;
import java.util.LinkedList;
import java.util.List;
public class File {
    String name;
    List<File> contents;

    public File(String name) {
        this.name = name;
        this.contents = new LinkedList<>();
    }
    void addFile(File file) {
        this.contents.add(file);
    }
    public String prettyPrint() {
        return prettyPrint(0);
    }

    private String prettyPrint(int indentationLevel) {
                String result = indentationSpaces(indentationLevel) + name;
        for (int i = 0; i < contents.size(); i++) {
            result += "/n" + contents.get(i).prettyPrint(indentationLevel + 1);
            }
            result += contents.get(i).prettyPrint(indentationLevel + 1) + "\n";
        }
        return result;
    }

    private String indentationSpaces(int indentationLevel) {
        if (indentationLevel > 0) {
            return "  " + indentationSpaces(indentationLevel - 1);
        }
        return "";
    }

    public static void main(String[] args) {
        File root = new File("root");
        File dir1 = new File("dir1");
        File dir2 = new File("dir2");
        File subdir = new File("subdir");
        File dir3 = new File("dir3");
        File myfile = new File("myfile.txt");
        File another = new File("another.png");

        root.contents.add(dir1);
        root.contents.add(dir2);
        root.contents.add(dir3);
        

        dir2.contents.add(subdir);
        subdir.contents.add(myfile);

        dir3.contents.add(another);
        
        System.out.println(root.prettyPrint());
    }
}

